var map = {
    title: "Dodo Galaxy",
    song: "env2",
    maker: "applepear",
    spawn: [0, 0.5, 0],
    init: function() {
        a.c([0, 0.6599999999999999, -99], true);
        a.c([-4, -1.3399999999999999, -101], true);
        a.c([-1, -1.3399999999999999, -103], true);
        a.c([-8, -0.33999999999999997, -102], true);
        a.c([4, -0.33999999999999997, -109], true);
        a.c([7, 1.6600000000000001, -102], true);
        a.c([4, -0.33999999999999997, -104], true);
        a.c([-11, -0.33999999999999997, -94], true);
        a.c([-14, -0.33999999999999997, -41], true);
        a.c([-5, -0.33999999999999997, -97], true);
        a.c([-3, -1.3399999999999999, -92], true);
        a.c([17, -6.340000000000001, -105], true);
        a.c([1, 3.66, -53], true);
        a.c([-4, -2.34, -51], true);
        a.c([-1, 2.66, -62], true);
        a.c([-6, -2.34, -62], true);
        a.c([4, -0.33999999999999997, -63], true);
        a.c([7, -4.340000000000001, -54], true);
        a.c([17, -2.34, -57], true);
        a.c([9, -2.34, -71], true);
        a.c([4, 0.6599999999999999, -68], true);
        a.c([-11, -4.340000000000001, -70], true);
        a.c([0, 2.66, -86], true);
        a.c([20, -4.340000000000001, -94], true);
        a.c([24, -2.34, -89], true);
        a.c([14, -2.34, -83], true);
        a.c([12, 1.6600000000000001, -73], true);
        a.c([-2, -3.34, -80], true);
        a.c([-14, 2.66, -53], true);
        a.c([31, -0.33999999999999997, -82], true);
        a.c([12, 2.66, -82], true);
        a.c([32, -7.340000000000001, -94], true);
        a.c([7, 4.659999999999999, -58], true);
        a.c([5, -3.34, -52], true);
        a.c([8, 2.66, -61], true);
        a.c([5, 2.66, -61], true);
        a.c([2, -1.3399999999999999, -52], true);
        a.c([0, 2.66, -102], true);
        a.c([13, 1.6600000000000001, -102], true);
        a.c([13, 1.6600000000000001, -111], true);
        a.c([10, 2.66, -96], true);
        a.c([10, -3.34, -104], true);
        a.c([15, 0.6599999999999999, -81], true);
        a.c([12, -4.340000000000001, -73], true);
        a.c([10, 13.66, -69], true);
        a.c([10, 0.6599999999999999, -67], true);
        a.c([11, -2.34, -70], true);
        a.c([11, -1.3399999999999999, -77], true);
        a.c([31, -1.3399999999999999, -94], true);
        a.c([21, 0.6599999999999999, -94], true);
        a.c([27, 1.6600000000000001, -77], true);
        a.c([15, -1.3399999999999999, -79], true);
        a.c([14, 0.6599999999999999, -77], true);
        a.c([18, 8.66, -86], true);
        a.c([14, 1.6600000000000001, -76], true);
        a.c([19, -4.340000000000001, -88], true);
        a.c([34, -2.34, -93], true);
        a.c([-5, 8.66, -100], true);
        a.c([-4, -0.33999999999999997, -102], true);
        a.c([7, 0.6599999999999999, -99], true);
        a.c([1, -1.3399999999999999, -98], true);
        a.c([-5, 3.66, -99], true);
        a.c([-4, 3.66, -102], true);
        a.c([2, 0.6599999999999999, -100], true);
        a.c([11.57, -3.7099999999999995, -98.26], true);
        a.c([15.57, -3.7099999999999995, -97.26], true);
        a.c([1.57, 1.29, -112.26], true);
        a.c([24.57, -1.71, -124.26], true);
        a.c([16.57, -5.71, -118.26], true);
        a.c([10.57, -5.71, -110.26], true);
        a.c([5.57, -3.7099999999999995, -111.26], true);
        a.c([13.57, -1.71, -124.26], true);
        a.c([-27.43, 5.29, -99.26], true);
        a.c([-20.43, -0.7100000000000001, -103.26], true);
        a.c([-23.43, 12.29, -102.26], true);
        a.c([-18.43, 12.29, -105.26], true);
        a.c([-10.43, 4.29, -110.26], true);
        a.c([3.57, -4.71, -118.26], true);
        a.c([-3.43, -4.71, -144.26], true);
        a.c([-9.43, 2.29, -121.26], true);
        a.c([3.57, 0.29, -127.26], true);
        a.c([-1.43, 3.29, -102.26], true);
        a.c([8.57, 4.29, -115.26], true);
        a.c([3.57, -0.7100000000000001, -115.26], true);
        a.c([6.57, 0.29, -100.26], true);
        a.c([-2.43, -4.71, -128.26], true);
        a.c([-9.43, -3.7099999999999995, -136.26], true);
        a.c([-2.43, -2.71, -130.26], true);
        a.c([-1.43, 0.29, -125.26], true);
        a.c([0.57, 2.29, -87.26], true);
        a.c([-1.43, -0.7100000000000001, -93.26], true);
        a.c([5.57, 2.29, -89.26], true);
        a.c([5.57, 2.29, -90.26], true);
        a.c([0.57, -0.7100000000000001, -87.26], true);
        a.c([-5.43, -0.7100000000000001, -94.26], true);
        a.c([-10.43, -3.7099999999999995, -103.26], true);
        a.c([12.57, 1.29, -101.26], true);
        a.c([-2.43, -1.71, -99.26], true);
        a.c([28.57, -0.7100000000000001, -134.26], true);
        a.c([30.57, -0.7100000000000001, -149.26], true);
        a.c([26.57, -7.710000000000001, -143.26], true);
        a.c([27.57, -5.71, -148.26], true);
        a.c([4.57, -7.710000000000001, -146.26], true);
        a.c([7.57, -0.7100000000000001, -147.26], true);
        a.c([7.57, -2.71, -147.26], true);
        a.c([-7.43, 3.29, -160.26], true);
        a.c([-1.43, 2.29, -156.26], true);
        a.c([-3.43, 3.29, -143.26], true);
        a.c([-3.43, 1.29, -141.26], true);
        a.c([-3.43, 2.29, -139.26], true);
        a.c([10.57, -2.71, -128.26], true);
        a.c([10.57, -3.7099999999999995, -128.26], true);
        a.c([7.57, -5.71, -139.26], true);
        a.c([9.57, 0.29, -141.26], true);
        a.c([0, -1.3399999999999999, -107], true);
        a.c([20, -1.3399999999999999, -115], true);
        a.c([24, -6.340000000000001, -110], true);
        a.c([14, 2.66, -104], true);
        a.c([31, -4.340000000000001, -103], true);
        a.c([12, -1.3399999999999999, -103], true);
        a.c([28, -0.33999999999999997, -110], true);
        a.c([25, -5.340000000000001, -102], true);
        a.c([10, 5.659999999999999, -98], true);
        a.c([10, 1.6600000000000001, -96], true);
        a.c([24, -1.3399999999999999, -99], true);
        a.c([24, -5.340000000000001, -98], true);
        a.c([31, -5.340000000000001, -115], true);
        a.c([27, -4.340000000000001, -106], true);
        a.c([28, -2.34, -108], true);
        a.c([14, 1.6600000000000001, -106], true);
        a.c([18, 0.6599999999999999, -115], true);
        a.c([14, 2.66, -105], true);
        a.c([-27.43, -0.7100000000000001, -128.26], true);
        a.c([-23.43, 4.29, -131.26], true);
        a.c([0.57, 0.29, -108.26], true);
        a.c([-1.43, -1.71, -123.26], true);
        a.c([5.57, -4.71, -118.26], true);
        a.c([5.57, -4.71, -119.26], true);
        a.c([0.57, -0.7100000000000001, -116.26], true);
        a.c([-5.43, -3.7099999999999995, -116.26], true);
        a.c([-10.43, 1.29, -124.26], true);
        a.c([-10, -3.34, -105], true);
        a.c([10, -1.3399999999999999, -113], true);
        a.c([14, 0.6599999999999999, -108], true);
        a.c([4, 0.6599999999999999, -102], true);
        a.c([21, -6.340000000000001, -101], true);
        a.c([2, -3.34, -101], true);
        a.c([18, -2.34, -108], true);
        a.c([15, 1.6600000000000001, -100], true);
        a.c([0, 3.66, -96], true);
        a.c([0, -0.33999999999999997, -93], true);
        a.c([14, -3.34, -97], true);
        a.c([14, -2.34, -104], true);
        a.c([21, 1.6600000000000001, -113], true);
        a.c([17, -6.340000000000001, -104], true);
        a.c([18, -2.34, -106], true);
        a.c([4, -0.33999999999999997, -104], true);
        a.c([8, -1.3399999999999999, -113], true);
        a.c([4, 0.6599999999999999, -103], true);
        a.c([-37.43, 4.29, -126.26], true);
        a.c([-33.43, 2.29, -129.26], true);
        a.c([-9.43, -3.7099999999999995, -106.26], true);
        a.c([-11.43, -0.7100000000000001, -121.26], true);
        a.c([-4.43, 2.29, -116.26], true);
        a.c([-4.43, 2.29, -117.26], true);
        a.c([-9.43, -3.7099999999999995, -114.26], true);
        a.c([-15.43, 0.29, -114.26], true);
        a.c([-20.43, -0.7100000000000001, -122.26], true);
        a.c([-9, -2.34, -101], true);
        a.c([11, -5.340000000000001, -101], true);
        a.c([15, -1.3399999999999999, -96], true);
        a.c([5, -1.3399999999999999, -90], true);
        a.c([22, -1.3399999999999999, -89], true);
        a.c([3, -2.34, -97], true);
        a.c([6, -4.340000000000001, -96], true);
        a.c([3, -0.33999999999999997, -88], true);
        a.c([14, 24.66, -84], true);
        a.c([1, 4.659999999999999, -82], true);
        a.c([2, 1.6600000000000001, -85], true);
        a.c([2, -2.34, -84], true);
        a.c([22, -2.34, -101], true);
        a.c([5, -1.3399999999999999, -92], true);
        a.c([6, 2.66, -94], true);
        a.c([5, 4.659999999999999, -92], true);
        a.c([9, 12.66, -101], true);
        a.c([5, 5.659999999999999, -91], true);
        a.c([-36.43, 0.29, -114.26], true);
        a.c([-32.43, 16.29, -117.26], true);
        a.c([-8.43, 1.29, -93.26], true);
        a.c([-10.43, 1.29, -109.26], true);
        a.c([-3.43, -2.71, -104.26], true);
        a.c([-3.43, -2.71, -105.26], true);
        a.c([-8.43, 1.29, -102.26], true);
        a.c([-14.43, -1.71, -102.26], true);
        a.c([-19.43, 4.29, -110.26], true);
        a.c([-19.43, -3.7099999999999995, -134.26], true);
        a.c([4.57, -2.71, -132.26], true);
        a.c([8.57, -3.7099999999999995, -136.26], true);
        a.c([8.57, -1.71, -136.26], true);
        a.c([-3.43, -2.71, -128.26], true);
        a.c([-0.43, 3.29, -131.26], true);
        a.c([2.57, 2.29, -132.26], true);
        a.c([7.57, -4.71, -135.26], true);
        a.c([-1.43, -2.71, -129.26], true);
        a.e([4, -2, -145]);
    },
    post: function() {
        cc.set_monkey("speed", 0.1);
        cc.set_monkey("gravity", new BABYLON.Vector3(null, 0, null));
        cc.set_monkey("player.scaling", new BABYLON.Vector3(5, 0.16, 5));
        cc.set_monkey("radius", 5);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < 1) {
                    a.fov_mul2(1.8);
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -1) {
                    a.msg_set("Spam space bar to create your own dodo galaxy!");
                    this.section_id += 1
                }
                break;
            case 2:
                if (score > 180) {
                    a.msg_del();
                    a.msg_set("Don't forget to look at the dodos around you!");
                    this.section_id += 1;
                }
                break;
            case 3:
                if (score > 360) {
                    a.msg_del();
                    this.section_id += 1;
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        for (let dodo of this.mini_dodos) {
            dodo.dispose();
        }
        this.mini_dodos = [];
        this.ss = 0;
        a.re('C0', [0, 0.6599999999999999, -99], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-4, -1.3399999999999999, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-1, -1.3399999999999999, -103], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-8, -0.33999999999999997, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [4, -0.33999999999999997, -109], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [7, 1.6600000000000001, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [4, -0.33999999999999997, -104], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [-11, -0.33999999999999997, -94], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [-14, -0.33999999999999997, -41], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [-5, -0.33999999999999997, -97], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [-3, -1.3399999999999999, -92], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [17, -6.340000000000001, -105], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [1, 3.66, -53], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [-4, -2.34, -51], [0, 0, 0], [2, 2, 2]);
        a.re('C14', [-1, 2.66, -62], [0, 0, 0], [2, 2, 2]);
        a.re('C15', [-6, -2.34, -62], [0, 0, 0], [2, 2, 2]);
        a.re('C16', [4, -0.33999999999999997, -63], [0, 0, 0], [2, 2, 2]);
        a.re('C17', [7, -4.340000000000001, -54], [0, 0, 0], [2, 2, 2]);
        a.re('C18', [17, -2.34, -57], [0, 0, 0], [2, 2, 2]);
        a.re('C19', [9, -2.34, -71], [0, 0, 0], [2, 2, 2]);
        a.re('C20', [4, 0.6599999999999999, -68], [0, 0, 0], [2, 2, 2]);
        a.re('C21', [-11, -4.340000000000001, -70], [0, 0, 0], [2, 2, 2]);
        a.re('C22', [0, 2.66, -86], [0, 0, 0], [2, 2, 2]);
        a.re('C23', [20, -4.340000000000001, -94], [0, 0, 0], [2, 2, 2]);
        a.re('C24', [24, -2.34, -89], [0, 0, 0], [2, 2, 2]);
        a.re('C25', [14, -2.34, -83], [0, 0, 0], [2, 2, 2]);
        a.re('C26', [12, 1.6600000000000001, -73], [0, 0, 0], [2, 2, 2]);
        a.re('C27', [-2, -3.34, -80], [0, 0, 0], [2, 2, 2]);
        a.re('C28', [-14, 2.66, -53], [0, 0, 0], [2, 2, 2]);
        a.re('C29', [31, -0.33999999999999997, -82], [0, 0, 0], [2, 2, 2]);
        a.re('C30', [12, 2.66, -82], [0, 0, 0], [2, 2, 2]);
        a.re('C31', [32, -7.340000000000001, -94], [0, 0, 0], [2, 2, 2]);
        a.re('C32', [7, 4.659999999999999, -58], [0, 0, 0], [2, 2, 2]);
        a.re('C33', [5, -3.34, -52], [0, 0, 0], [2, 2, 2]);
        a.re('C34', [8, 2.66, -61], [0, 0, 0], [2, 2, 2]);
        a.re('C35', [5, 2.66, -61], [0, 0, 0], [2, 2, 2]);
        a.re('C36', [2, -1.3399999999999999, -52], [0, 0, 0], [2, 2, 2]);
        a.re('C37', [0, 2.66, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C38', [13, 1.6600000000000001, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C39', [13, 1.6600000000000001, -111], [0, 0, 0], [2, 2, 2]);
        a.re('C40', [10, 2.66, -96], [0, 0, 0], [2, 2, 2]);
        a.re('C41', [10, -3.34, -104], [0, 0, 0], [2, 2, 2]);
        a.re('C42', [15, 0.6599999999999999, -81], [0, 0, 0], [2, 2, 2]);
        a.re('C43', [12, -4.340000000000001, -73], [0, 0, 0], [2, 2, 2]);
        a.re('C44', [10, 13.66, -69], [0, 0, 0], [2, 2, 2]);
        a.re('C45', [10, 0.6599999999999999, -67], [0, 0, 0], [2, 2, 2]);
        a.re('C46', [11, -2.34, -70], [0, 0, 0], [2, 2, 2]);
        a.re('C47', [11, -1.3399999999999999, -77], [0, 0, 0], [2, 2, 2]);
        a.re('C48', [31, -1.3399999999999999, -94], [0, 0, 0], [2, 2, 2]);
        a.re('C49', [21, 0.6599999999999999, -94], [0, 0, 0], [2, 2, 2]);
        a.re('C50', [27, 1.6600000000000001, -77], [0, 0, 0], [2, 2, 2]);
        a.re('C51', [15, -1.3399999999999999, -79], [0, 0, 0], [2, 2, 2]);
        a.re('C52', [14, 0.6599999999999999, -77], [0, 0, 0], [2, 2, 2]);
        a.re('C53', [18, 8.66, -86], [0, 0, 0], [2, 2, 2]);
        a.re('C54', [14, 1.6600000000000001, -76], [0, 0, 0], [2, 2, 2]);
        a.re('C55', [19, -4.340000000000001, -88], [0, 0, 0], [2, 2, 2]);
        a.re('C56', [34, -2.34, -93], [0, 0, 0], [2, 2, 2]);
        a.re('C57', [-5, 8.66, -100], [0, 0, 0], [2, 2, 2]);
        a.re('C58', [-4, -0.33999999999999997, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C59', [7, 0.6599999999999999, -99], [0, 0, 0], [2, 2, 2]);
        a.re('C60', [1, -1.3399999999999999, -98], [0, 0, 0], [2, 2, 2]);
        a.re('C61', [-5, 3.66, -99], [0, 0, 0], [2, 2, 2]);
        a.re('C62', [-4, 3.66, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C63', [2, 0.6599999999999999, -100], [0, 0, 0], [2, 2, 2]);
        a.re('C64', [11.57, -3.7099999999999995, -98.26], [0, 0, 0], [2, 2, 2]);
        a.re('C65', [15.57, -3.7099999999999995, -97.26], [0, 0, 0], [2, 2, 2]);
        a.re('C66', [1.57, 1.29, -112.26], [0, 0, 0], [2, 2, 2]);
        a.re('C67', [24.57, -1.71, -124.26], [0, 0, 0], [2, 2, 2]);
        a.re('C68', [16.57, -5.71, -118.26], [0, 0, 0], [2, 2, 2]);
        a.re('C69', [10.57, -5.71, -110.26], [0, 0, 0], [2, 2, 2]);
        a.re('C70', [5.57, -3.7099999999999995, -111.26], [0, 0, 0], [2, 2, 2]);
        a.re('C71', [13.57, -1.71, -124.26], [0, 0, 0], [2, 2, 2]);
        a.re('C72', [-27.43, 5.29, -99.26], [0, 0, 0], [2, 2, 2]);
        a.re('C73', [-20.43, -0.7100000000000001, -103.26], [0, 0, 0], [2, 2, 2]);
        a.re('C74', [-23.43, 12.29, -102.26], [0, 0, 0], [2, 2, 2]);
        a.re('C75', [-18.43, 12.29, -105.26], [0, 0, 0], [2, 2, 2]);
        a.re('C76', [-10.43, 4.29, -110.26], [0, 0, 0], [2, 2, 2]);
        a.re('C77', [3.57, -4.71, -118.26], [0, 0, 0], [2, 2, 2]);
        a.re('C78', [-3.43, -4.71, -144.26], [0, 0, 0], [2, 2, 2]);
        a.re('C79', [-9.43, 2.29, -121.26], [0, 0, 0], [2, 2, 2]);
        a.re('C80', [3.57, 0.29, -127.26], [0, 0, 0], [2, 2, 2]);
        a.re('C81', [-1.43, 3.29, -102.26], [0, 0, 0], [2, 2, 2]);
        a.re('C82', [8.57, 4.29, -115.26], [0, 0, 0], [2, 2, 2]);
        a.re('C83', [3.57, -0.7100000000000001, -115.26], [0, 0, 0], [2, 2, 2]);
        a.re('C84', [6.57, 0.29, -100.26], [0, 0, 0], [2, 2, 2]);
        a.re('C85', [-2.43, -4.71, -128.26], [0, 0, 0], [2, 2, 2]);
        a.re('C86', [-9.43, -3.7099999999999995, -136.26], [0, 0, 0], [2, 2, 2]);
        a.re('C87', [-2.43, -2.71, -130.26], [0, 0, 0], [2, 2, 2]);
        a.re('C88', [-1.43, 0.29, -125.26], [0, 0, 0], [2, 2, 2]);
        a.re('C89', [0.57, 2.29, -87.26], [0, 0, 0], [2, 2, 2]);
        a.re('C90', [-1.43, -0.7100000000000001, -93.26], [0, 0, 0], [2, 2, 2]);
        a.re('C91', [5.57, 2.29, -89.26], [0, 0, 0], [2, 2, 2]);
        a.re('C92', [5.57, 2.29, -90.26], [0, 0, 0], [2, 2, 2]);
        a.re('C93', [0.57, -0.7100000000000001, -87.26], [0, 0, 0], [2, 2, 2]);
        a.re('C94', [-5.43, -0.7100000000000001, -94.26], [0, 0, 0], [2, 2, 2]);
        a.re('C95', [-10.43, -3.7099999999999995, -103.26], [0, 0, 0], [2, 2, 2]);
        a.re('C96', [12.57, 1.29, -101.26], [0, 0, 0], [2, 2, 2]);
        a.re('C97', [-2.43, -1.71, -99.26], [0, 0, 0], [2, 2, 2]);
        a.re('C98', [28.57, -0.7100000000000001, -134.26], [0, 0, 0], [2, 2, 2]);
        a.re('C99', [30.57, -0.7100000000000001, -149.26], [0, 0, 0], [2, 2, 2]);
        a.re('C100', [26.57, -7.710000000000001, -143.26], [0, 0, 0], [2, 2, 2]);
        a.re('C101', [27.57, -5.71, -148.26], [0, 0, 0], [2, 2, 2]);
        a.re('C102', [4.57, -7.710000000000001, -146.26], [0, 0, 0], [2, 2, 2]);
        a.re('C103', [7.57, -0.7100000000000001, -147.26], [0, 0, 0], [2, 2, 2]);
        a.re('C104', [7.57, -2.71, -147.26], [0, 0, 0], [2, 2, 2]);
        a.re('C105', [-7.43, 3.29, -160.26], [0, 0, 0], [2, 2, 2]);
        a.re('C106', [-1.43, 2.29, -156.26], [0, 0, 0], [2, 2, 2]);
        a.re('C107', [-3.43, 3.29, -143.26], [0, 0, 0], [2, 2, 2]);
        a.re('C108', [-3.43, 1.29, -141.26], [0, 0, 0], [2, 2, 2]);
        a.re('C109', [-3.43, 2.29, -139.26], [0, 0, 0], [2, 2, 2]);
        a.re('C110', [10.57, -2.71, -128.26], [0, 0, 0], [2, 2, 2]);
        a.re('C111', [10.57, -3.7099999999999995, -128.26], [0, 0, 0], [2, 2, 2]);
        a.re('C112', [7.57, -5.71, -139.26], [0, 0, 0], [2, 2, 2]);
        a.re('C113', [9.57, 0.29, -141.26], [0, 0, 0], [2, 2, 2]);
        a.re('C114', [0, -1.3399999999999999, -107], [0, 0, 0], [2, 2, 2]);
        a.re('C115', [20, -1.3399999999999999, -115], [0, 0, 0], [2, 2, 2]);
        a.re('C116', [24, -6.340000000000001, -110], [0, 0, 0], [2, 2, 2]);
        a.re('C117', [14, 2.66, -104], [0, 0, 0], [2, 2, 2]);
        a.re('C118', [31, -4.340000000000001, -103], [0, 0, 0], [2, 2, 2]);
        a.re('C119', [12, -1.3399999999999999, -103], [0, 0, 0], [2, 2, 2]);
        a.re('C120', [28, -0.33999999999999997, -110], [0, 0, 0], [2, 2, 2]);
        a.re('C121', [25, -5.340000000000001, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C122', [10, 5.659999999999999, -98], [0, 0, 0], [2, 2, 2]);
        a.re('C123', [10, 1.6600000000000001, -96], [0, 0, 0], [2, 2, 2]);
        a.re('C124', [24, -1.3399999999999999, -99], [0, 0, 0], [2, 2, 2]);
        a.re('C125', [24, -5.340000000000001, -98], [0, 0, 0], [2, 2, 2]);
        a.re('C126', [31, -5.340000000000001, -115], [0, 0, 0], [2, 2, 2]);
        a.re('C127', [27, -4.340000000000001, -106], [0, 0, 0], [2, 2, 2]);
        a.re('C128', [28, -2.34, -108], [0, 0, 0], [2, 2, 2]);
        a.re('C129', [14, 1.6600000000000001, -106], [0, 0, 0], [2, 2, 2]);
        a.re('C130', [18, 0.6599999999999999, -115], [0, 0, 0], [2, 2, 2]);
        a.re('C131', [14, 2.66, -105], [0, 0, 0], [2, 2, 2]);
        a.re('C132', [-27.43, -0.7100000000000001, -128.26], [0, 0, 0], [2, 2, 2]);
        a.re('C133', [-23.43, 4.29, -131.26], [0, 0, 0], [2, 2, 2]);
        a.re('C134', [0.57, 0.29, -108.26], [0, 0, 0], [2, 2, 2]);
        a.re('C135', [-1.43, -1.71, -123.26], [0, 0, 0], [2, 2, 2]);
        a.re('C136', [5.57, -4.71, -118.26], [0, 0, 0], [2, 2, 2]);
        a.re('C137', [5.57, -4.71, -119.26], [0, 0, 0], [2, 2, 2]);
        a.re('C138', [0.57, -0.7100000000000001, -116.26], [0, 0, 0], [2, 2, 2]);
        a.re('C139', [-5.43, -3.7099999999999995, -116.26], [0, 0, 0], [2, 2, 2]);
        a.re('C140', [-10.43, 1.29, -124.26], [0, 0, 0], [2, 2, 2]);
        a.re('C141', [-10, -3.34, -105], [0, 0, 0], [2, 2, 2]);
        a.re('C142', [10, -1.3399999999999999, -113], [0, 0, 0], [2, 2, 2]);
        a.re('C143', [14, 0.6599999999999999, -108], [0, 0, 0], [2, 2, 2]);
        a.re('C144', [4, 0.6599999999999999, -102], [0, 0, 0], [2, 2, 2]);
        a.re('C145', [21, -6.340000000000001, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C146', [2, -3.34, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C147', [18, -2.34, -108], [0, 0, 0], [2, 2, 2]);
        a.re('C148', [15, 1.6600000000000001, -100], [0, 0, 0], [2, 2, 2]);
        a.re('C149', [0, 3.66, -96], [0, 0, 0], [2, 2, 2]);
        a.re('C150', [0, -0.33999999999999997, -93], [0, 0, 0], [2, 2, 2]);
        a.re('C151', [14, -3.34, -97], [0, 0, 0], [2, 2, 2]);
        a.re('C152', [14, -2.34, -104], [0, 0, 0], [2, 2, 2]);
        a.re('C153', [21, 1.6600000000000001, -113], [0, 0, 0], [2, 2, 2]);
        a.re('C154', [17, -6.340000000000001, -104], [0, 0, 0], [2, 2, 2]);
        a.re('C155', [18, -2.34, -106], [0, 0, 0], [2, 2, 2]);
        a.re('C156', [4, -0.33999999999999997, -104], [0, 0, 0], [2, 2, 2]);
        a.re('C157', [8, -1.3399999999999999, -113], [0, 0, 0], [2, 2, 2]);
        a.re('C158', [4, 0.6599999999999999, -103], [0, 0, 0], [2, 2, 2]);
        a.re('C159', [-37.43, 4.29, -126.26], [0, 0, 0], [2, 2, 2]);
        a.re('C160', [-33.43, 2.29, -129.26], [0, 0, 0], [2, 2, 2]);
        a.re('C161', [-9.43, -3.7099999999999995, -106.26], [0, 0, 0], [2, 2, 2]);
        a.re('C162', [-11.43, -0.7100000000000001, -121.26], [0, 0, 0], [2, 2, 2]);
        a.re('C163', [-4.43, 2.29, -116.26], [0, 0, 0], [2, 2, 2]);
        a.re('C164', [-4.43, 2.29, -117.26], [0, 0, 0], [2, 2, 2]);
        a.re('C165', [-9.43, -3.7099999999999995, -114.26], [0, 0, 0], [2, 2, 2]);
        a.re('C166', [-15.43, 0.29, -114.26], [0, 0, 0], [2, 2, 2]);
        a.re('C167', [-20.43, -0.7100000000000001, -122.26], [0, 0, 0], [2, 2, 2]);
        a.re('C168', [-9, -2.34, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C169', [11, -5.340000000000001, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C170', [15, -1.3399999999999999, -96], [0, 0, 0], [2, 2, 2]);
        a.re('C171', [5, -1.3399999999999999, -90], [0, 0, 0], [2, 2, 2]);
        a.re('C172', [22, -1.3399999999999999, -89], [0, 0, 0], [2, 2, 2]);
        a.re('C173', [3, -2.34, -97], [0, 0, 0], [2, 2, 2]);
        a.re('C174', [6, -4.340000000000001, -96], [0, 0, 0], [2, 2, 2]);
        a.re('C175', [3, -0.33999999999999997, -88], [0, 0, 0], [2, 2, 2]);
        a.re('C176', [14, 24.66, -84], [0, 0, 0], [2, 2, 2]);
        a.re('C177', [1, 4.659999999999999, -82], [0, 0, 0], [2, 2, 2]);
        a.re('C178', [2, 1.6600000000000001, -85], [0, 0, 0], [2, 2, 2]);
        a.re('C179', [2, -2.34, -84], [0, 0, 0], [2, 2, 2]);
        a.re('C180', [22, -2.34, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C181', [5, -1.3399999999999999, -92], [0, 0, 0], [2, 2, 2]);
        a.re('C182', [6, 2.66, -94], [0, 0, 0], [2, 2, 2]);
        a.re('C183', [5, 4.659999999999999, -92], [0, 0, 0], [2, 2, 2]);
        a.re('C184', [9, 12.66, -101], [0, 0, 0], [2, 2, 2]);
        a.re('C185', [5, 5.659999999999999, -91], [0, 0, 0], [2, 2, 2]);
        a.re('C186', [-36.43, 0.29, -114.26], [0, 0, 0], [2, 2, 2]);
        a.re('C187', [-32.43, 16.29, -117.26], [0, 0, 0], [2, 2, 2]);
        a.re('C188', [-8.43, 1.29, -93.26], [0, 0, 0], [2, 2, 2]);
        a.re('C189', [-10.43, 1.29, -109.26], [0, 0, 0], [2, 2, 2]);
        a.re('C190', [-3.43, -2.71, -104.26], [0, 0, 0], [2, 2, 2]);
        a.re('C191', [-3.43, -2.71, -105.26], [0, 0, 0], [2, 2, 2]);
        a.re('C192', [-8.43, 1.29, -102.26], [0, 0, 0], [2, 2, 2]);
        a.re('C193', [-14.43, -1.71, -102.26], [0, 0, 0], [2, 2, 2]);
        a.re('C194', [-19.43, 4.29, -110.26], [0, 0, 0], [2, 2, 2]);
        a.re('C195', [-19.43, -3.7099999999999995, -134.26], [0, 0, 0], [2, 2, 2]);
        a.re('C196', [4.57, -2.71, -132.26], [0, 0, 0], [2, 2, 2]);
        a.re('C197', [8.57, -3.7099999999999995, -136.26], [0, 0, 0], [2, 2, 2]);
        a.re('C198', [8.57, -1.71, -136.26], [0, 0, 0], [2, 2, 2]);
        a.re('C199', [-3.43, -2.71, -128.26], [0, 0, 0], [2, 2, 2]);
        a.re('C200', [-0.43, 3.29, -131.26], [0, 0, 0], [2, 2, 2]);
        a.re('C201', [2.57, 2.29, -132.26], [0, 0, 0], [2, 2, 2]);
        a.re('C202', [7.57, -4.71, -135.26], [0, 0, 0], [2, 2, 2]);
        a.re('C203', [-1.43, -2.71, -129.26], [0, 0, 0], [2, 2, 2]);
        a.re('E0', [4, -2, -145], [0, 0, 0], [1, 1, 1]);
    },
    mini_dodos: [],
    physics_update: function() {},
    render_update: function() {
        if (controls.space) {
            this.mini_dodos.push(player.clone("player"+this.mini_dodos.length));
            this.mini_dodos[this.mini_dodos.length-1].scaling = new BABYLON.Vector3(2, 0.16, 2);
            setTimeout(() => {
                this.mini_dodos[this.mini_dodos.length-1].physicsImpostor = new BABYLON.PhysicsImpostor(this.player1, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 1.0, restitution: 1.0, friction: 0.5}, scene);
            }, 0);
            this.mini_dodos[this.mini_dodos.length-1].applyGravity = true;
            this.mini_dodos[this.mini_dodos.length-1].checkCollisions = true;
        }

        for (let dodo of this.mini_dodos) {
            dodo.movePOV(0, 0, 1);
        }

        var direction = a.m("E0").position.subtract(player.position);
        direction.normalize();
        var speed = 2;
        var velocity = direction.scale(speed);

        player.physicsImpostor.setLinearVelocity(velocity);
    }
}
