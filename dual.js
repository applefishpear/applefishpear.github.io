var map = {
    title: "Dual",
    song: "env2",
    maker: "applepear",
    spawn: [0, 0.5, 0],
	player1: null,
    init: function() {
		a.p([5.33007, -6.65993, -138.73993], [0, 0, 0], [1, 18, 50], "6e6e6e", 0, 0, 1.0, false, false, false, false);
        a.p([-5.32986, -6.65986, -138.73986], [0, 0, 0], [1, 18, 50], "6e6e6e", 0, 0, 1.0, false, false, false, false);
        a.p([4.37021, -8.58979, -76.84979], [0, 0, 0], [4.68, 2, 50], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.50028, -6.78972, -56.50972], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([3.19035, -6.78965, -76.52965], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([4.26042, -6.78958, -86.42958], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([5.28049, -6.78951, -68.01951], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([5.5, -6.79, -96.12], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([5.01007, 0.75007, -266.33993], [0, 0, 0], [8, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.p([-4.98986, 0.75014, -266.33986], [0, 0, 0], [8, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.p([-7.02979, 0.75021, -279.64979], [0, 0, 0], [3.92, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.p([-0.85972, 0.75028, -279.65972], [0, 0, 0], [4.22, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.p([0.00035, 0.75035, -291.96965], [0, 0, 0], [15.5, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.p([7.03042, 0.75042, -305.89958], [0, 0, 0], [3.92, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.p([0.97049, 0.75049, -305.90951], [0, 0, 0], [4.22, 5, 5], "6e6e6e", 0, 0, 0.6, false, false, true, false);
        a.y([4.04, -2.73, -309.44], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.03993, -2.72993, -309.43993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-2.58986, -2.72986, -310.98986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([2.59021, -2.72979, -310.98979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.10972, -2.72972, -312.50972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.11035, -2.72965, -312.50965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([0.00042, -2.72958, -314.34958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.66049, -2.72951, -315.76951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([3.1, -2.73, -317.41], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.51007, -2.72993, -319.02993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.51014, -2.72986, -319.02986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([5.52021, -2.72979, -320.93979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([5.65028, -2.72972, -323.14972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.83035, -2.72965, -325.14965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.04042, -2.72958, -327.17958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([2.83049, -2.72951, -328.95951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.1, -2.73, -330.26], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.65993, -2.72993, -315.76993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-3.09986, -2.72986, -317.40986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.50979, -2.72979, -319.02979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.50972, -2.72972, -319.02972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-5.51965, -2.72965, -320.93965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-5.64958, -2.72958, -323.14958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.82951, -2.72951, -325.14951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.04, -2.73, -327.18], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-2.82993, -2.72993, -328.95993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.09986, -2.72986, -330.25986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.p([2.72021, -5.11979, -20.85979], [-0.79, 0, 0], [2, 2, 5.9], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([0.00028, -2.93972, -4.40972], [0, -0.22, 0], [2, 2, 20], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([-2.71965, -5.11965, -20.85965], [0.79, 0, 0], [2, 2, 5.9], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([0.00042, -5.11958, -16.71958], [0, 0, 0], [2, 2, 5.46], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([0.00049, -3.60951, -20.83951], [-0.79, 0, 0], [2, 2, 2], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([-4.36, -5.12, -27.54], [0, 0, 0], [2.6, 2, 8.3], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([4.36007, -5.11993, -27.53993], [0, 0, 0], [2.6, 2, 8.3], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.c([-4.07986, -7.35986, -62.12986], "5f965b");
        a.c([-6.14979, -7.819790000000001, -68.90979], "5f965b");
        a.c([-2.52972, -8.14972, -71.81972], "5f965b");
        a.c([-4.07965, -7.35965, -77.26965], "5f965b");
        a.c([-4.07958, -7.35958, -83.24958], "5f965b");
        a.c([-2.62951, -8.02951, -89.69951], "5f965b");
        a.c([-6.09, -8.07, -95.35], "5f965b");
        a.c([-2.62993, -7.77993, -93.94993], "5f965b");
        a.p([-1.14986, -5.00986, -108.99986], [-0.36, 0.44, -0.12], [3, 2, 20], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([1.15021, -5.00979, -108.99979], [0.36, 0.44, 0.12], [3, 2, 20], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([0.00028, -2.66972, -218.89972], [0, 0, 0], [13.86, 2, 50], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([-4.35965, -8.58965, -43.75965], [0, 0, 0], [6, 2, 18.12], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([4.37042, -8.58958, -43.79958], [0, 0, 0], [6, 2, 18.12], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([8.93049, -2.66951, -281.12951], [0, 0, 0], [0.1, 2, 53.96], "a8a7a7", 0, 0, 0.6, false, false, false, false);
        a.p([-8.87, -2.67, -281.13], [0, 0, 0], [0.1, 2, 54.54], "a8a7a7", 0, 0, 0.6, false, false, false, false);
        a.y([-4.35993, -11.49993, -76.95993], [0, 1.57, 0], [7.62, 50, 7.62], "a8a7a7", 0, 0, 0.6, false, 1, false);
        a.p([0.00014, -2.66986, -250.10986], [0, 0, 0], [13.86, 2, 14.56], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([2.05021, -3.60979, -22.91979], [-2.36, 0, 0], [4, 2, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([-2.11972, -3.60972, -22.94972], [-0.79, 0, 0], [4, 2, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([0.00035, -2.66965, -280.98965], [0, 0, 0], [18, 2, 54.76], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.y([0.00007, -0.68993, -196.57993], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00014, -0.70986, -199.20986], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00021, -0.70979, -201.80979], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00028, -0.70972, -209.68972], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-3.68965, -0.70965, -213.97965], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([3.69042, -0.70958, -213.97958], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-5.37951, -0.70951, -216.77951], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([5.38, -0.71, -216.78], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00007, -0.70993, -216.77993], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-2.63986, -0.70986, -221.32986], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([1.26021, -0.71979, -225.62979], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([5.67028, -0.71972, -232.01972], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-5.03965, -0.71965, -232.01965], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-2.53958, -0.71958, -238.19958], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.p([0.00049, -8.29951, -182.20951], [0, 0.43, 0], [13.86, 2, 27], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.e([0, -2.73, -332.07]);

        if (this.player1 !== null) {
            this.player1.dispose();
			this.player1 = null;
        }
    },
    post: function() {
        cc.set_monkey("steer", default_steer * 0.8);
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("camera.fov mul2", 1.2);
        cc.refresh();
    },
    section_id: 0,
	skip_cam: false,
    section_update: function() {
        let PZ = player.position.z;
		switch (this.section_id) {
			case 0:
				if (PZ < -1) {
					steer = 0;
					this.section_id += 1;
				}
				break;
			case 1:
				if (PZ < -18) {
					this.player1 = player.clone("player1");
					setTimeout(() => {
						this.player1.physicsImpostor = new BABYLON.PhysicsImpostor(this.player1, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 1.0, restitution: 1.0, friction: 0.5}, scene);
					}, 0);
					this.player1.applyGravity = true;
					this.player1.checkCollisions = true;
					this.section_id += 1;
				}
				break;
			case 2:
				if (PZ < -34) {
					steer = cc.get("steer");
					this.section_id += 1;
				}
				break;
			case 3:
				if (PZ < -110) {
					// a.fov_mul2(1.0);
					this.skip_cam = true;
					this.section_id += 1
				}
				break;
			case 4:
				if (PZ < -115.88986) {
					speed = default_speed * 2;
					this.section_id += 1
				}
				break;
			case 5:
				if (PZ < -165.88986) {
					this.skip_cam = false;
					speed = cc.get("speed");
					this.section_id += 1
				}
				break;
			case 6:
				if (PZ < -241.95) {
                    speed = 0.2;
					steer = default_steer * 1.0;
					this.section_id += 1
				}
				break;
		}
    },
    reset: function() {
		if (this.player1 !== null) {
            this.player1.dispose();
			this.player1 = null;
        }
        this.section_id = 0;
		this.skip_cam = false;
		a.re('P0', [5.33007, -6.65993, -138.73993], [0, 0, 0], [1, 18, 50]);
        a.re('P1', [-5.32986, -6.65986, -138.73986], [0, 0, 0], [1, 18, 50]);
        a.re('P2', [4.37021, -8.58979, -76.84979], [0, 0, 0], [4.68, 2, 50]);
        a.re('P3', [4.50028, -6.78972, -56.50972], [0, 0, 0], [2, 2, 2]);
        a.re('P4', [3.19035, -6.78965, -76.52965], [0, 0, 0], [2, 2, 2]);
        a.re('P5', [4.26042, -6.78958, -86.42958], [0, 0, 0], [2, 2, 2]);
        a.re('P6', [5.28049, -6.78951, -68.01951], [0, 0, 0], [2, 2, 2]);
        a.re('P7', [5.5, -6.79, -96.12], [0, 0, 0], [2, 2, 2]);
        a.re('P8', [5.01007, 0.75007, -266.33993], [0, 0, 0], [8, 5, 5]);
        a.re('P9', [-4.98986, 0.75014, -266.33986], [0, 0, 0], [8, 5, 5]);
        a.re('P10', [-7.02979, 0.75021, -279.64979], [0, 0, 0], [3.92, 5, 5]);
        a.re('P11', [-0.85972, 0.75028, -279.65972], [0, 0, 0], [4.22, 5, 5]);
        a.re('P12', [0.00035, 0.75035, -291.96965], [0, 0, 0], [15.5, 5, 5]);
        a.re('P13', [7.03042, 0.75042, -305.89958], [0, 0, 0], [3.92, 5, 5]);
        a.re('P14', [0.97049, 0.75049, -305.90951], [0, 0, 0], [4.22, 5, 5]);
        a.re('Y0', [4.04, -2.73, -309.44], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y1', [-4.03993, -2.72993, -309.43993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y2', [-2.58986, -2.72986, -310.98986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y3', [2.59021, -2.72979, -310.98979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y4', [-1.10972, -2.72972, -312.50972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y5', [1.11035, -2.72965, -312.50965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y6', [0.00042, -2.72958, -314.34958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y7', [1.66049, -2.72951, -315.76951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y8', [3.1, -2.73, -317.41], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y9', [4.51007, -2.72993, -319.02993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y10', [4.51014, -2.72986, -319.02986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y11', [5.52021, -2.72979, -320.93979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y12', [5.65028, -2.72972, -323.14972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y13', [4.83035, -2.72965, -325.14965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y14', [4.04042, -2.72958, -327.17958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y15', [2.83049, -2.72951, -328.95951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y16', [1.1, -2.73, -330.26], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y17', [-1.65993, -2.72993, -315.76993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y18', [-3.09986, -2.72986, -317.40986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y19', [-4.50979, -2.72979, -319.02979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y20', [-4.50972, -2.72972, -319.02972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y21', [-5.51965, -2.72965, -320.93965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y22', [-5.64958, -2.72958, -323.14958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y23', [-4.82951, -2.72951, -325.14951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y24', [-4.04, -2.73, -327.18], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y25', [-2.82993, -2.72993, -328.95993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y26', [-1.09986, -2.72986, -330.25986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('P15', [2.72021, -5.11979, -20.85979], [-0.79, 0, 0], [2, 2, 5.9]);
        a.re('P16', [0.00028, -2.93972, -4.40972], [0, -0.22, 0], [2, 2, 20]);
        a.re('P17', [-2.71965, -5.11965, -20.85965], [0.79, 0, 0], [2, 2, 5.9]);
        a.re('P18', [0.00042, -5.11958, -16.71958], [0, 0, 0], [2, 2, 5.46]);
        a.re('P19', [0.00049, -3.60951, -20.83951], [-0.79, 0, 0], [2, 2, 2]);
        a.re('P20', [-4.36, -5.12, -27.54], [0, 0, 0], [2.6, 2, 8.3]);
        a.re('P21', [4.36007, -5.11993, -27.53993], [0, 0, 0], [2.6, 2, 8.3]);
        a.re('C0', [-4.07986, -7.35986, -62.12986], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-6.14979, -7.819790000000001, -68.90979], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-2.52972, -8.14972, -71.81972], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-4.07965, -7.35965, -77.26965], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-4.07958, -7.35958, -83.24958], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [-2.62951, -8.02951, -89.69951], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [-6.09, -8.07, -95.35], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [-2.62993, -7.77993, -93.94993], [0, 0, 0], [2, 2, 2]);
        a.re('P22', [-1.14986, -5.00986, -108.99986], [-0.36, 0.44, -0.12], [3, 2, 20]);
        a.re('P23', [1.15021, -5.00979, -108.99979], [0.36, 0.44, 0.12], [3, 2, 20]);
        a.re('P24', [0.00028, -2.66972, -218.89972], [0, 0, 0], [13.86, 2, 50]);
        a.re('P25', [-4.35965, -8.58965, -43.75965], [0, 0, 0], [6, 2, 18.12]);
        a.re('P26', [4.37042, -8.58958, -43.79958], [0, 0, 0], [6, 2, 18.12]);
        a.re('P27', [8.93049, -2.66951, -281.12951], [0, 0, 0], [0.1, 2, 53.96]);
        a.re('P28', [-8.87, -2.67, -281.13], [0, 0, 0], [0.1, 2, 54.54]);
        a.re('Y27', [-4.35993, -11.49993, -76.95993], [0, 1.57, 0], [7.62, 50, 7.62]);
        a.re('P29', [0.00014, -2.66986, -250.10986], [0, 0, 0], [13.86, 2, 14.56]);
        a.re('P30', [2.05021, -3.60979, -22.91979], [-2.36, 0, 0], [4, 2, 2]);
        a.re('P31', [-2.11972, -3.60972, -22.94972], [-0.79, 0, 0], [4, 2, 2]);
        a.re('P32', [0.00035, -2.66965, -280.98965], [0, 0, 0], [18, 2, 54.76]);
        a.re('Y28', [0.00007, -0.68993, -196.57993], [0, 0, 0], [2, 2, 2]);
        a.re('Y29', [0.00014, -0.70986, -199.20986], [0, 0, 0], [2, 2, 2]);
        a.re('Y30', [0.00021, -0.70979, -201.80979], [0, 0, 0], [2, 2, 2]);
        a.re('Y31', [0.00028, -0.70972, -209.68972], [0, 0, 0], [2, 2, 2]);
        a.re('Y32', [-3.68965, -0.70965, -213.97965], [0, 0, 0], [2, 2, 2]);
        a.re('Y33', [3.69042, -0.70958, -213.97958], [0, 0, 0], [2, 2, 2]);
        a.re('Y34', [-5.37951, -0.70951, -216.77951], [0, 0, 0], [2, 2, 2]);
        a.re('Y35', [5.38, -0.71, -216.78], [0, 0, 0], [2, 2, 2]);
        a.re('Y36', [0.00007, -0.70993, -216.77993], [0, 0, 0], [2, 2, 2]);
        a.re('Y37', [-2.63986, -0.70986, -221.32986], [0, 0, 0], [2, 2, 2]);
        a.re('Y38', [1.26021, -0.71979, -225.62979], [0, 0, 0], [2, 2, 2]);
        a.re('Y39', [5.67028, -0.71972, -232.01972], [0, 0, 0], [2, 2, 2]);
        a.re('Y40', [-5.03965, -0.71965, -232.01965], [0, 0, 0], [2, 2, 2]);
        a.re('Y41', [-2.53958, -0.71958, -238.19958], [0, 0, 0], [2, 2, 2]);
        a.re('P33', [0.00049, -8.29951, -182.20951], [0, 0.43, 0], [13.86, 2, 27]);
        a.re('E0', [0, -2.73, -332.07], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {
		if (this.player1 !== null) {
			this.collision_check();
		}
    },
    render_update: function() {
		if (this.player1 !== null) {
			this.player_move();
		}
    },
    collision_check: function() {
		if (this.player1.position.y < -20) {change_state.die('Fell To Death')}
		if (this.player1.position.y > 80) {change_state.die('Left The Orbit')}
		this.checkConeCollision()
		this.checkEndingCollision()
	},
	checkConeCollision() {
		for (let i=0;i<maker.cone_count;i++) {
			let cone = cones[i];
			if (this.are_touching(this.player1, cone, 0.5)) {
				change_state.die('Died From Cone');
				break;
			}
		}
	},
	checkEndingCollision() {
		if (score < 10) return
		for (let i=0;i<maker.ending_count;i++) {
			let ending = endings[i];
			if (this.are_touching(this.player1, ending, 1.2)) { // previously 1.0
				change_state.win();
				break;
			}
		}
	},
	player_move: function() {
		if (!this.shouldSpin()) {
			this.player1.physicsImpostor.setAngularVelocity(new BABYLON.Vector3(0,0,0));
			this.player1.rotationQuaternion = BABYLON.Quaternion.RotationAxis(new BABYLON.Vector3(0,0,0),0);
		}

		if (this.player1 !== null) {
			this.player1.rotation.y = -player.rotation.y;
			this.player1.position.x = -player.position.x;
			this.player1.position.z = player.position.z;
		}
		camera.position.x = 0;
		if (!this.skip_cam) {
			camera.rotation.x = 40*Math.PI/180;
		} else {
			camera.rotation.x = 59*Math.PI/180;
		}
        camera.position.y = player.position.y + cam_vertical + 5;
		camera.rotation.y = 3.14;
	},
	shouldSpin: function() {
		if (speed === default_speed) return true;
		if (speed === 0.2) return true;
		return false
	},
	are_touching: function(a, b, r) {
		let dz = a.position.z - b.position.z;
		if (Math.abs(dz) < r) {
			let dx = a.position.x - b.position.x;
			if (Math.abs(dx) < r) {
				let dy = a.position.y - b.position.y;
				if (Math.abs(dy) < r * 1.5) {
					return true;
				}
			}
		}
		return false;
	},
}