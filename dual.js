player1 = null;
var map = {
    title: "Dual",
    song: "env2",
    maker: "applepear",
    spawn: [0, 0.5, 0],
    init: function() {
        cleanup.run = this.run;
		a.p([-5.32993, -6.65993, -138.73993], [0, 0, 0], [1, 18, 50], "000000,0.99", 0, 0, 1.0, false, false, false, false);
        a.p([4.37014, -1.58986, -129.84986], [0, 0, 0], [1.32, 0.64, 7.72], "000000,0.99", 0, 0, 1.0, false, false, false, false);
        a.p([4.37021, -2.58979, -139.84979], [0, 0, 0], [1.32, 0.64, 7.72], "000000,0.99", 0, 0, 1.0, false, false, false, false);
        a.p([4.37028, -3.58972, -148.84972], [0, 0, 0], [1.32, 0.64, 7.72], "000000,0.99", 0, 0, 1.0, false, false, false, false);
        a.p([4.37035, -4.58965, -158.84965], [0, 0, 0], [1.32, 0.64, 7.72], "000000,0.99", 0, 0, 1.0, false, false, false, false);
        a.p([4.37042, -8.58958, -76.84958], [0, 0, 0], [4.68, 2, 50], "7ee8fa", 0, 0, 1.0, false, false, false, false);
        a.p([4.37049, -0.58951, -120.84951], [0, 0, 0], [1.32, 0.64, 7.72], "000000,0.99", 0, 0, 1.0, false, false, false, false);
        a.p([5.33, -6.66, -138.74], [0, 0, 0], [1, 18, 50], "ffffff", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36993, -0.58993, -120.84993], [0, 0, 0], [1.32, 0.64, 7.72], "ffffff", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36986, -1.58986, -129.84986], [0, 0, 0], [1.32, 0.64, 7.72], "ffffff", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36979, -2.58979, -139.84979], [0, 0, 0], [1.32, 0.64, 7.72], "ffffff", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36972, -3.58972, -148.84972], [0, 0, 0], [1.32, 0.64, 7.72], "ffffff", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36965, -4.58965, -158.84965], [0, 0, 0], [1.32, 0.64, 7.72], "ffffff", 0, 0, 1.0, false, false, false, false);
        a.p([5.01042, 0.75042, -266.33958], [0, 0, 0], [8, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([-4.98951, 0.75049, -266.33951], [0, 0, 0], [8, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([-7.03, 0.75, -282.65], [0, 0, 0], [3.92, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([-0.85993, 0.75007, -282.65993], [0, 0, 0], [4.22, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([0.00014, 0.75014, -297.96986], [0, 0, 0], [13.62, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([7.03021, 0.75021, -312.89979], [0, 0, 0], [3.92, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([0.97028, 0.75028, -312.90972], [0, 0, 0], [4.22, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([4.50035, -6.78965, -56.50965], [0, 0, 0], [2, 2, 2], "fff07c", 0, 0, 0.6, false, false, true, false);
        a.p([3.19042, -6.78958, -76.52958], [0, 0, 0], [2, 2, 2], "fff07c", 0, 0, 0.6, false, false, true, false);
        a.p([4.26049, -6.78951, -86.42951], [0, 0, 0], [2, 2, 2], "fff07c", 0, 0, 0.6, false, false, true, false);
        a.p([5.28, -6.79, -68.02], [0, 0, 0], [2, 2, 2], "fff07c", 0, 0, 0.6, false, false, true, false);
        a.p([5.50007, -6.78993, -96.11993], [0, 0, 0], [2, 2, 2], "fff07c", 0, 0, 0.6, false, false, true, false);
        a.p([0.00014, -2.93986, -4.40986], [0, -0.22, 0], [2, 2, 20], "000000,0.99", 0, 0, 0.6, false, false, false, false);
        a.p([0.00021, -5.11979, -16.71979], [0, 0, 0], [2, 2, 5.46], "000000,0.99", 0, 0, 0.6, false, false, false, false);
        a.p([8.93028, -2.66972, -286.12972], [0, 0, 0], [0.1, 2, 59.8], "324ca8", 0, 0, 0.6, false, false, false, false);
        a.p([2.72035, -5.11965, -20.85965], [-0.79, 0, 0], [2, 2, 5.9], "324ca8", 0, 0, 0.6, false, false, false, false);
        a.p([4.36042, -5.11958, -27.53958], [0, 0, 0], [2.6, 2, 8.3], "324ca8", 0, 0, 0.6, false, false, false, false);
        a.y([4.04049, -2.72951, -316.43951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.04, -2.73, -316.44], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-2.58993, -2.72993, -317.98993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([2.59014, -2.72986, -317.98986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.10979, -2.72979, -319.50979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.11028, -2.72972, -319.50972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([0.00035, -2.72965, -321.34965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.66042, -2.72958, -322.76958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([3.10049, -2.72951, -324.40951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.51, -2.73, -326.03], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.51007, -2.72993, -326.02993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([5.52014, -2.72986, -327.93986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([5.65021, -2.72979, -330.14979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.83028, -2.72972, -332.14972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.04035, -2.72965, -334.17965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([2.83042, -2.72958, -335.95958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.10049, -2.72951, -337.25951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.66, -2.73, -322.77], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-3.09993, -2.72993, -324.40993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.50986, -2.72986, -326.02986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.50979, -2.72979, -326.02979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-5.51972, -2.72972, -327.93972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-5.64965, -2.72965, -330.14965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.82958, -2.72958, -332.14958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.03951, -2.72951, -334.17951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-2.83, -2.73, -335.96], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.09993, -2.72993, -337.25993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.p([4.37014, -8.58986, -43.79986], [0, 0, 0], [6, 2, 18.12], "7ee8fa", 0, 0, 0.6, false, false, false, false);
        a.c([-6.14979, -7.819790000000001, -68.90979], "80ff72");
        a.c([-2.52972, -8.14972, -71.81972], "80ff72");
        a.c([-4.07965, -7.35965, -77.26965], "80ff72");
        a.c([-4.07958, -7.35958, -83.24958], "80ff72");
        a.c([-2.62951, -8.02951, -89.69951], "80ff72");
        a.c([-6.09, -8.07, -95.35], "80ff72");
        a.c([-2.62993, -7.77993, -93.94993], "80ff72");
        a.c([-4.07986, -7.35986, -62.12986], "80ff72");
        a.p([1.15021, -5.00979, -108.99979], [0.36, 0.44, 0.12], [3, 2, 20], "c930c7", 0, 0, 0.6, false, false, false, false);
        a.p([-1.14972, -5.00972, -108.99972], [-0.36, 0.44, -0.12], [3, 2, 20], "c930c7", 0, 0, 0.6, false, false, false, false);
        a.p([-8.86965, -2.66965, -286.12965], [0, 0, 0], [0.1, 2, 60.02], "d91c1c", 0, 0, 0.6, false, false, false, false);
        a.p([-2.71958, -5.11958, -20.85958], [0.79, 0, 0], [2, 2, 5.9], "d91c1c", 0, 0, 0.6, false, false, false, false);
        a.p([-4.35951, -5.11951, -27.53951], [0, 0, 0], [2.6, 2, 8.3], "d91c1c", 0, 0, 0.6, false, false, false, false);
        a.p([0, -8.3, -182.21], [0, 0.43, 0], [13.86, 2, 27], "eec0c6", 0, 0, 0.6, false, false, false, false);
        a.y([-4.35993, -11.49993, -76.95993], [0, 1.57, 0], [7.62, 50, 7.62], "eec0c6", 0, 0, 0.6, false, 1, false);
        a.p([-4.35986, -8.58986, -43.75986], [0, 0, 0], [6, 2, 18.12], "eec0c6", 0, 0, 0.6, false, false, false, false);
        a.p([0.00021, -2.66979, -218.89979], [0, 0, 0], [13.86, 2, 50], "eec0c6", 0, 0, 0.6, false, false, false, false);
        a.p([0.00028, -3.60972, -20.83972], [-0.79, 0, 0], [2, 2, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.00035, -2.66965, -250.10965], [0, 0, 0], [13.86, 2, 14.56], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([2.05042, -3.60958, -22.91958], [-2.36, 0, 0], [4, 2, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([-2.11951, -3.60951, -22.94951], [-0.79, 0, 0], [4, 2, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([0, -2.67, -285.99], [0, 0, 0], [18, 2, 60.14], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.y([0.00028, -0.68972, -196.57972], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00035, -0.70965, -199.20965], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00042, -0.70958, -201.80958], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00049, -0.70951, -209.68951], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([-3.69, -0.71, -213.98], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([3.69007, -0.70993, -213.97993], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([-5.37986, -0.70986, -216.77986], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([5.38021, -0.70979, -216.77979], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00028, -0.70972, -216.77972], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([-2.63965, -0.70965, -221.32965], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([1.26042, -0.71958, -225.62958], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([5.67049, -0.71951, -232.01951], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([-5.04, -0.72, -232.02], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.y([-2.53993, -0.71993, -238.19993], [0, 0, 0], [2, 2, 2], "80ff72", 0, 0, 0.6, false, 0.0, true);
        a.e([0.00014, -2.72986, -339.06986]);

        if (player1 !== null) {
            player1.dispose();
			player1 = null;
        }
    },
    post: function() {
        cc.set_monkey("steer", default_steer * 0.8);
        cc.set_monkey("speed", default_speed);
        cc.set_monkey("camera.fov mul2", 1.2);
        cc.set_monkey("scene.clearColor", new BABYLON.Color3.FromHexString("#808080"));
        cc.set_monkey("light.groundColor", new BABYLON.Color3.FromHexString("#ffffff"));
        cc.refresh();
    },
    section_id: 0,
	skip_cam: false,
    new_cam: false,
    section_update: function() {
        let PZ = player.position.z;
		switch (this.section_id) {
			case 0:
				if (PZ < -1) {
					steer = 0;
					this.section_id += 1;
				}
				break;
			case 1:
				if (PZ < -18) {
					player1 = player.clone("player1");
					setTimeout(() => {
						player1.physicsImpostor = new BABYLON.PhysicsImpostor(player1, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 1.0, restitution: 1.0, friction: 0.5}, scene);
					}, 0);
					player1.applyGravity = true;
					player1.checkCollisions = true;

                    cape_tail1 = new BABYLON.Mesh("custom", scene);
		
                    var tail_vertexData = new BABYLON.VertexData();
                    tail_vertexData.positions = [
                        -1,0,1,
                        0,0,3,
                        1,0,1,
                    ];
                    tail_vertexData.indices = [0, 1, 2];
                    tail_vertexData.applyToMesh(cape_tail1);

                    cape_tail1.material = decorations.rgba_mat(255,255,255,1);

                    cape_tail1.scaling.x = 0.3;
                    cape_tail1.scaling.y = 0.3;
                    cape_tail1.scaling.z = 0.3;
                    cape_tail1.isVisible = true;
                    cape_tail1.parent = player1;

					this.section_id += 1;
				}
				break;
			case 2:
				if (PZ < -34) {
					steer = cc.get("steer");
					this.section_id += 1;
				}
				break;
			case 3:
				if (PZ < -110) {
					// a.fov_mul2(1.0);
					this.skip_cam = true;
					this.section_id += 1
				}
				break;
			case 4:
				if (PZ < -115.88986) {
					speed = default_speed * 2;
					this.section_id += 1
				}
				break;
			case 5:
				if (PZ < -165.88986) {
					this.skip_cam = false;
					speed = cc.get("speed");
					this.section_id += 1
				}
				break;
			case 6:
				if (PZ < -194) {
					steer = default_steer * 1.0;
					this.section_id += 1
				}
				break;
			case 7:
				if (PZ < -241.95) {
                    speed = 0.2;
                    this.new_cam = true;
					this.section_id += 1
				}
				break;
		}
    },
    reset: function() {
		if (player1 !== null) {
            player1.dispose();
			player1 = null;
        }
        this.section_id = 0;
		this.skip_cam = false;
        this.new_cam = false;
		a.re('P0', [-5.32993, -6.65993, -138.73993], [0, 0, 0], [1, 18, 50]);
        a.re('P1', [4.37014, -1.58986, -129.84986], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P2', [4.37021, -2.58979, -139.84979], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P3', [4.37028, -3.58972, -148.84972], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P4', [4.37035, -4.58965, -158.84965], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P5', [4.37042, -8.58958, -76.84958], [0, 0, 0], [4.68, 2, 50]);
        a.re('P6', [4.37049, -0.58951, -120.84951], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P7', [5.33, -6.66, -138.74], [0, 0, 0], [1, 18, 50]);
        a.re('P8', [-4.36993, -0.58993, -120.84993], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P9', [-4.36986, -1.58986, -129.84986], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P10', [-4.36979, -2.58979, -139.84979], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P11', [-4.36972, -3.58972, -148.84972], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P12', [-4.36965, -4.58965, -158.84965], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P13', [5.01042, 0.75042, -266.33958], [0, 0, 0], [8, 5, 5]);
        a.re('P14', [-4.98951, 0.75049, -266.33951], [0, 0, 0], [8, 5, 5]);
        a.re('P15', [-7.03, 0.75, -282.65], [0, 0, 0], [3.92, 5, 5]);
        a.re('P16', [-0.85993, 0.75007, -282.65993], [0, 0, 0], [4.22, 5, 5]);
        a.re('P17', [0.00014, 0.75014, -297.96986], [0, 0, 0], [13.62, 5, 5]);
        a.re('P18', [7.03021, 0.75021, -312.89979], [0, 0, 0], [3.92, 5, 5]);
        a.re('P19', [0.97028, 0.75028, -312.90972], [0, 0, 0], [4.22, 5, 5]);
        a.re('P20', [4.50035, -6.78965, -56.50965], [0, 0, 0], [2, 2, 2]);
        a.re('P21', [3.19042, -6.78958, -76.52958], [0, 0, 0], [2, 2, 2]);
        a.re('P22', [4.26049, -6.78951, -86.42951], [0, 0, 0], [2, 2, 2]);
        a.re('P23', [5.28, -6.79, -68.02], [0, 0, 0], [2, 2, 2]);
        a.re('P24', [5.50007, -6.78993, -96.11993], [0, 0, 0], [2, 2, 2]);
        a.re('P25', [0.00014, -2.93986, -4.40986], [0, -0.22, 0], [2, 2, 20]);
        a.re('P26', [0.00021, -5.11979, -16.71979], [0, 0, 0], [2, 2, 5.46]);
        a.re('P27', [8.93028, -2.66972, -286.12972], [0, 0, 0], [0.1, 2, 59.8]);
        a.re('P28', [2.72035, -5.11965, -20.85965], [-0.79, 0, 0], [2, 2, 5.9]);
        a.re('P29', [4.36042, -5.11958, -27.53958], [0, 0, 0], [2.6, 2, 8.3]);
        a.re('Y0', [4.04049, -2.72951, -316.43951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y1', [-4.04, -2.73, -316.44], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y2', [-2.58993, -2.72993, -317.98993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y3', [2.59014, -2.72986, -317.98986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y4', [-1.10979, -2.72979, -319.50979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y5', [1.11028, -2.72972, -319.50972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y6', [0.00035, -2.72965, -321.34965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y7', [1.66042, -2.72958, -322.76958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y8', [3.10049, -2.72951, -324.40951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y9', [4.51, -2.73, -326.03], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y10', [4.51007, -2.72993, -326.02993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y11', [5.52014, -2.72986, -327.93986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y12', [5.65021, -2.72979, -330.14979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y13', [4.83028, -2.72972, -332.14972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y14', [4.04035, -2.72965, -334.17965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y15', [2.83042, -2.72958, -335.95958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y16', [1.10049, -2.72951, -337.25951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y17', [-1.66, -2.73, -322.77], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y18', [-3.09993, -2.72993, -324.40993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y19', [-4.50986, -2.72986, -326.02986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y20', [-4.50979, -2.72979, -326.02979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y21', [-5.51972, -2.72972, -327.93972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y22', [-5.64965, -2.72965, -330.14965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y23', [-4.82958, -2.72958, -332.14958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y24', [-4.03951, -2.72951, -334.17951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y25', [-2.83, -2.73, -335.96], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y26', [-1.09993, -2.72993, -337.25993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('P30', [4.37014, -8.58986, -43.79986], [0, 0, 0], [6, 2, 18.12]);
        a.re('C0', [-6.14979, -7.819790000000001, -68.90979], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-2.52972, -8.14972, -71.81972], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-4.07965, -7.35965, -77.26965], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-4.07958, -7.35958, -83.24958], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-2.62951, -8.02951, -89.69951], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [-6.09, -8.07, -95.35], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [-2.62993, -7.77993, -93.94993], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [-4.07986, -7.35986, -62.12986], [0, 0, 0], [2, 2, 2]);
        a.re('P31', [1.15021, -5.00979, -108.99979], [0.36, 0.44, 0.12], [3, 2, 20]);
        a.re('P32', [-1.14972, -5.00972, -108.99972], [-0.36, 0.44, -0.12], [3, 2, 20]);
        a.re('P33', [-8.86965, -2.66965, -286.12965], [0, 0, 0], [0.1, 2, 60.02]);
        a.re('P34', [-2.71958, -5.11958, -20.85958], [0.79, 0, 0], [2, 2, 5.9]);
        a.re('P35', [-4.35951, -5.11951, -27.53951], [0, 0, 0], [2.6, 2, 8.3]);
        a.re('P36', [0, -8.3, -182.21], [0, 0.43, 0], [13.86, 2, 27]);
        a.re('Y27', [-4.35993, -11.49993, -76.95993], [0, 1.57, 0], [7.62, 50, 7.62]);
        a.re('P37', [-4.35986, -8.58986, -43.75986], [0, 0, 0], [6, 2, 18.12]);
        a.re('P38', [0.00021, -2.66979, -218.89979], [0, 0, 0], [13.86, 2, 50]);
        a.re('P39', [0.00028, -3.60972, -20.83972], [-0.79, 0, 0], [2, 2, 2]);
        a.re('P40', [0.00035, -2.66965, -250.10965], [0, 0, 0], [13.86, 2, 14.56]);
        a.re('P41', [2.05042, -3.60958, -22.91958], [-2.36, 0, 0], [4, 2, 2]);
        a.re('P42', [-2.11951, -3.60951, -22.94951], [-0.79, 0, 0], [4, 2, 2]);
        a.re('P43', [0, -2.67, -285.99], [0, 0, 0], [18, 2, 60.14]);
        a.re('Y28', [0.00028, -0.68972, -196.57972], [0, 0, 0], [2, 2, 2]);
        a.re('Y29', [0.00035, -0.70965, -199.20965], [0, 0, 0], [2, 2, 2]);
        a.re('Y30', [0.00042, -0.70958, -201.80958], [0, 0, 0], [2, 2, 2]);
        a.re('Y31', [0.00049, -0.70951, -209.68951], [0, 0, 0], [2, 2, 2]);
        a.re('Y32', [-3.69, -0.71, -213.98], [0, 0, 0], [2, 2, 2]);
        a.re('Y33', [3.69007, -0.70993, -213.97993], [0, 0, 0], [2, 2, 2]);
        a.re('Y34', [-5.37986, -0.70986, -216.77986], [0, 0, 0], [2, 2, 2]);
        a.re('Y35', [5.38021, -0.70979, -216.77979], [0, 0, 0], [2, 2, 2]);
        a.re('Y36', [0.00028, -0.70972, -216.77972], [0, 0, 0], [2, 2, 2]);
        a.re('Y37', [-2.63965, -0.70965, -221.32965], [0, 0, 0], [2, 2, 2]);
        a.re('Y38', [1.26042, -0.71958, -225.62958], [0, 0, 0], [2, 2, 2]);
        a.re('Y39', [5.67049, -0.71951, -232.01951], [0, 0, 0], [2, 2, 2]);
        a.re('Y40', [-5.04, -0.72, -232.02], [0, 0, 0], [2, 2, 2]);
        a.re('Y41', [-2.53993, -0.71993, -238.19993], [0, 0, 0], [2, 2, 2]);
        a.re('E0', [0.00014, -2.72986, -339.06986], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {
		if (player1 !== null) {
			this.collision_check();
		}
    },
    render_update: function() {
		if (player1 !== null) {
			this.player_move();
		}
    },
    collision_check: function() {
		if (player1.position.y < -20) {change_state.die('Fell To Death')}
		if (player1.position.y > 80) {change_state.die('Left The Orbit')}
		this.checkConeCollision()
		this.checkEndingCollision()
	},
	checkConeCollision() {
		for (let i=0;i<maker.cone_count;i++) {
			let cone = cones[i];
			if (this.are_touching(player1, cone, 0.5)) {
				change_state.die('Died From Cone');
				break;
			}
		}
	},
	checkEndingCollision() {
		if (score < 10) return
		for (let i=0;i<maker.ending_count;i++) {
			let ending = endings[i];
			if (this.are_touching(player1, ending, 1.2)) { // previously 1.0
				change_state.win();
				break;
			}
		}
	},
	player_move: function() {
		if (!this.shouldSpin()) {
			player1.physicsImpostor.setAngularVelocity(new BABYLON.Vector3(0,0,0));
			player1.rotationQuaternion = BABYLON.Quaternion.RotationAxis(new BABYLON.Vector3(0,0,0),0);
		}

		if (player1 !== null) {
			player1.rotation.y = -player.rotation.y;
			player1.position.x = -player.position.x;
			player1.position.z = player.position.z;
		}
		camera.position.x = 0;
        if (!this.new_cam) {
            if (!this.skip_cam) {
                camera.rotation.x = 40*Math.PI/180;
            } else {
                camera.rotation.x = 59*Math.PI/180;
            }
            camera.position.y = player.position.y + cam_vertical + 5;
            camera.rotation.y = 3.14;
        } else {
            cam_depression = 1.57;
            camera.position.y = player.position.y + cam_vertical + 15;
            camera.rotation.y = 3.14;
            camera.position.z = player.position.z - 5;
        }
	},
	shouldSpin: function() {
		if (speed === default_speed) return true;
		if (speed === 0.2) return true;
		return false
	},
	are_touching: function(a, b, r) {
		let dz = a.position.z - b.position.z;
		if (Math.abs(dz) < r) {
			let dx = a.position.x - b.position.x;
			if (Math.abs(dx) < r) {
				let dy = a.position.y - b.position.y;
				if (Math.abs(dy) < r * 1.5) {
					return true;
				}
			}
		}
		return false;
	},
    run: function(full_reset=true) {
		if (isMapLoaded == false) {
			console.error("Map is not loaded");
			return;
		}
		if (full_reset == true) {
			currentMapId = null;
			isMapLoaded = false;
			map = {
				render_update: function() {},
				physics_update: function() {},
				section_update: function() {}
			}
			cc.hard_reset();
		}

		for (let i=0;i<maker.ending_count;i++) {
			let mesh_name = "E" + i;
			let mesh = scene.getMeshByName(mesh_name);
			mesh.dispose(true);
		}
		for (let i=0;i<maker.platform_count;i++) {
			let mesh_name = "P" + i;
			let mesh = scene.getMeshByName(mesh_name);
			mesh.dispose(true);
		}
		for (let i=0;i<maker.cone_count;i++) {
			let mesh_name = "C" + i;
			let mesh = scene.getMeshByName(mesh_name);
			mesh.dispose(true);
		}
		for (let i=0;i<maker.cylinder_count;i++) {
			let mesh_name = "Y" + i;
			let mesh = scene.getMeshByName(mesh_name);
			mesh.dispose(true);
		}
		for (let i=0;i<maker.sphere_count;i++) {
			let mesh_name = "S" + i;
			let mesh = scene.getMeshByName(mesh_name);
			mesh.dispose(true);
		}
        player1.dispose()
		cones = [];
		endings = [];
		jumppads = [];
		driftPads = [];
		maker.platform_count = 0;
		maker.cone_count = 0;
		maker.cylinder_count = 0;
		maker.sphere_count = 0;
		maker.ending_count = 0;
	}
}