var map = {
    title: "Dual",
    song: "env2",
    maker: "applepear",
    spawn: [0, 0.5, 0],
	player1: null,
    init: function() {
		a.p([5.33007, -6.65993, -138.73993], [0, 0, 0], [1, 18, 50], "6e6e6e", 0, 0, 1.0, false, false, false, false);
        a.p([-5.32986, -6.65986, -138.73986], [0, 0, 0], [1, 18, 50], "6e6e6e", 0, 0, 1.0, false, false, false, false);
        a.p([4.37021, -8.58979, -76.84979], [0, 0, 0], [4.68, 2, 50], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.37028, -0.58972, -120.84972], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.37035, -1.58965, -129.84965], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.37042, -2.58958, -139.84958], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.37049, -3.58951, -148.84951], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.37, -4.59, -158.85], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36993, -0.58993, -120.84993], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36986, -1.58986, -129.84986], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36979, -2.58979, -139.84979], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36972, -3.58972, -148.84972], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([-4.36965, -4.58965, -158.84965], [0, 0, 0], [1.32, 0.64, 7.72], "a8a7a7", 0, 0, 1.0, false, false, false, false);
        a.p([4.50042, -6.78958, -56.50958], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([3.19049, -6.78951, -76.52951], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([4.26, -6.79, -86.43], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([5.28007, -6.78993, -68.01993], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([5.50014, -6.78986, -96.11986], [0, 0, 0], [2, 2, 2], "0876ae", 0, 0, 0.6, false, false, true, false);
        a.p([5.01021, 0.75021, -266.33979], [0, 0, 0], [8, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([-4.98972, 0.75028, -266.33972], [0, 0, 0], [8, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([-7.02965, 0.75035, -279.64965], [0, 0, 0], [3.92, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([-0.85958, 0.75042, -279.65958], [0, 0, 0], [4.22, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([0.00049, 0.75049, -291.96951], [0, 0, 0], [15.5, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([7.03, 0.75, -305.9], [0, 0, 0], [3.92, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.p([0.97007, 0.75007, -305.90993], [0, 0, 0], [4.22, 5, 5], "8318a3", 0, 0, 0.6, false, false, true, false);
        a.y([4.04014, -2.72986, -309.43986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.03979, -2.72979, -309.43979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-2.58972, -2.72972, -310.98972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([2.59035, -2.72965, -310.98965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.10958, -2.72958, -312.50958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.11049, -2.72951, -312.50951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([0, -2.73, -314.35], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.66007, -2.72993, -315.76993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([3.10014, -2.72986, -317.40986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.51021, -2.72979, -319.02979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.51028, -2.72972, -319.02972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([5.52035, -2.72965, -320.93965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([5.65042, -2.72958, -323.14958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.83049, -2.72951, -325.14951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([4.04, -2.73, -327.18], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([2.83007, -2.72993, -328.95993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([1.10014, -2.72986, -330.25986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.65979, -2.72979, -315.76979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-3.09972, -2.72972, -317.40972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.50965, -2.72965, -319.02965], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.50958, -2.72958, -319.02958], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-5.51951, -2.72951, -320.93951], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-5.65, -2.73, -323.15], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.82993, -2.72993, -325.14993], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-4.03986, -2.72986, -327.17986], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-2.82979, -2.72979, -328.95979], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.y([-1.09972, -2.72972, -330.25972], [0, 0, 0], [2.12, 2.12, 2.12], "34eb37,0.6", 0, 0, 0.6, false, 1, false);
        a.p([2.72035, -5.11965, -20.85965], [-0.79, 0, 0], [2, 2, 5.9], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([0.00042, -2.93958, -4.40958], [0, -0.22, 0], [2, 2, 20], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([-2.71951, -5.11951, -20.85951], [0.79, 0, 0], [2, 2, 5.9], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([0, -5.12, -16.72], [0, 0, 0], [2, 2, 5.46], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([0.00007, -3.60993, -20.83993], [-0.79, 0, 0], [2, 2, 2], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([-4.35986, -5.11986, -27.53986], [0, 0, 0], [2.6, 2, 8.3], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.p([4.36021, -5.11979, -27.53979], [0, 0, 0], [2.6, 2, 8.3], "4a4a4a", 0, 0, 0.6, false, false, false, false);
        a.c([-4.07972, -7.35972, -62.12972], "5f965b");
        a.c([-6.14965, -7.819650000000001, -68.90965], "5f965b");
        a.c([-2.52958, -8.14958, -71.81958], "5f965b");
        a.c([-4.07951, -7.35951, -77.26951], "5f965b");
        a.c([-4.08, -7.36, -83.25], "5f965b");
        a.c([-2.62993, -8.02993, -89.69993], "5f965b");
        a.c([-6.08986, -8.06986, -95.34986], "5f965b");
        a.c([-2.62979, -7.77979, -93.94979], "5f965b");
        a.p([-1.14972, -5.00972, -108.99972], [-0.36, 0.44, -0.12], [3, 2, 20], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([1.15035, -5.00965, -108.99965], [0.36, 0.44, 0.12], [3, 2, 20], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([0.00042, -2.66958, -218.89958], [0, 0, 0], [13.86, 2, 50], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([-4.35951, -8.58951, -43.75951], [0, 0, 0], [6, 2, 18.12], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([4.37, -8.59, -43.8], [0, 0, 0], [6, 2, 18.12], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.p([8.93007, -2.66993, -281.12993], [0, 0, 0], [0.1, 2, 53.96], "a8a7a7", 0, 0, 0.6, false, false, false, false);
        a.p([-8.86986, -2.66986, -281.12986], [0, 0, 0], [0.1, 2, 54.54], "a8a7a7", 0, 0, 0.6, false, false, false, false);
        a.y([-4.35979, -11.49979, -76.95979], [0, 1.57, 0], [7.62, 50, 7.62], "a8a7a7", 0, 0, 0.6, false, 1, false);
        a.p([0.00028, -2.66972, -250.10972], [0, 0, 0], [13.86, 2, 14.56], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([2.05035, -3.60965, -22.91965], [-2.36, 0, 0], [4, 2, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([-2.11958, -3.60958, -22.94958], [-0.79, 0, 0], [4, 2, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([0.00049, -2.66951, -280.98951], [0, 0, 0], [18, 2, 54.76], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.y([0.00021, -0.68979, -196.57979], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00028, -0.70972, -199.20972], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00035, -0.70965, -201.80965], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00042, -0.70958, -209.68958], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-3.68951, -0.70951, -213.97951], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([3.69, -0.71, -213.98], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-5.37993, -0.70993, -216.77993], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([5.38014, -0.70986, -216.77986], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([0.00021, -0.70979, -216.77979], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-2.63972, -0.70972, -221.32972], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([1.26035, -0.71965, -225.62965], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([5.67042, -0.71958, -232.01958], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-5.03951, -0.71951, -232.01951], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.y([-2.54, -0.72, -238.2], [0, 0, 0], [2, 2, 2], "1", 0, 0, 0.6, false, 0.0, true);
        a.p([0.00007, -8.29993, -182.20993], [0, 0.43, 0], [13.86, 2, 27], "6e6e6e", 0, 0, 0.6, false, false, false, false);
        a.e([0.00014, -2.72986, -332.06986]);

        if (this.player1 !== null) {
            this.player1.dispose();
			this.player1 = null;
        }
    },
    post: function() {
        cc.set_monkey("steer", default_steer * 0.8);
        cc.set_monkey("speed", default_speed);
        cc.set_monkey("camera.fov mul2", 1.2);
        cc.refresh();
    },
    section_id: 0,
	skip_cam: false,
    new_cam: false,
    section_update: function() {
        let PZ = player.position.z;
		switch (this.section_id) {
			case 0:
				if (PZ < -1) {
					steer = 0;
					this.section_id += 1;
				}
				break;
			case 1:
				if (PZ < -18) {
					this.player1 = player.clone("player1");
					setTimeout(() => {
						this.player1.physicsImpostor = new BABYLON.PhysicsImpostor(this.player1, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 1.0, restitution: 1.0, friction: 0.5}, scene);
					}, 0);
					this.player1.applyGravity = true;
					this.player1.checkCollisions = true;
					this.section_id += 1;
				}
				break;
			case 2:
				if (PZ < -34) {
					steer = cc.get("steer");
					this.section_id += 1;
				}
				break;
			case 3:
				if (PZ < -110) {
					// a.fov_mul2(1.0);
					this.skip_cam = true;
					this.section_id += 1
				}
				break;
			case 4:
				if (PZ < -115.88986) {
					speed = default_speed * 2;
					this.section_id += 1
				}
				break;
			case 5:
				if (PZ < -165.88986) {
					this.skip_cam = false;
					speed = cc.get("speed");
					this.section_id += 1
				}
				break;
			case 6:
				if (PZ < -194) {
					steer = default_steer * 1.0;
					this.section_id += 1
				}
				break;
			case 7:
				if (PZ < -241.95) {
                    speed = 0.2;
                    this.new_cam = true;
					this.section_id += 1
				}
				break;
		}
    },
    reset: function() {
		if (this.player1 !== null) {
            this.player1.dispose();
			this.player1 = null;
        }
        this.section_id = 0;
		this.skip_cam = false;
        this.new_cam = false;
		a.re('P0', [5.33007, -6.65993, -138.73993], [0, 0, 0], [1, 18, 50]);
        a.re('P1', [-5.32986, -6.65986, -138.73986], [0, 0, 0], [1, 18, 50]);
        a.re('P2', [4.37021, -8.58979, -76.84979], [0, 0, 0], [4.68, 2, 50]);
        a.re('P3', [4.37028, -0.58972, -120.84972], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P4', [4.37035, -1.58965, -129.84965], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P5', [4.37042, -2.58958, -139.84958], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P6', [4.37049, -3.58951, -148.84951], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P7', [4.37, -4.59, -158.85], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P8', [-4.36993, -0.58993, -120.84993], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P9', [-4.36986, -1.58986, -129.84986], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P10', [-4.36979, -2.58979, -139.84979], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P11', [-4.36972, -3.58972, -148.84972], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P12', [-4.36965, -4.58965, -158.84965], [0, 0, 0], [1.32, 0.64, 7.72]);
        a.re('P13', [4.50042, -6.78958, -56.50958], [0, 0, 0], [2, 2, 2]);
        a.re('P14', [3.19049, -6.78951, -76.52951], [0, 0, 0], [2, 2, 2]);
        a.re('P15', [4.26, -6.79, -86.43], [0, 0, 0], [2, 2, 2]);
        a.re('P16', [5.28007, -6.78993, -68.01993], [0, 0, 0], [2, 2, 2]);
        a.re('P17', [5.50014, -6.78986, -96.11986], [0, 0, 0], [2, 2, 2]);
        a.re('P18', [5.01021, 0.75021, -266.33979], [0, 0, 0], [8, 5, 5]);
        a.re('P19', [-4.98972, 0.75028, -266.33972], [0, 0, 0], [8, 5, 5]);
        a.re('P20', [-7.02965, 0.75035, -279.64965], [0, 0, 0], [3.92, 5, 5]);
        a.re('P21', [-0.85958, 0.75042, -279.65958], [0, 0, 0], [4.22, 5, 5]);
        a.re('P22', [0.00049, 0.75049, -291.96951], [0, 0, 0], [15.5, 5, 5]);
        a.re('P23', [7.03, 0.75, -305.9], [0, 0, 0], [3.92, 5, 5]);
        a.re('P24', [0.97007, 0.75007, -305.90993], [0, 0, 0], [4.22, 5, 5]);
        a.re('Y0', [4.04014, -2.72986, -309.43986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y1', [-4.03979, -2.72979, -309.43979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y2', [-2.58972, -2.72972, -310.98972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y3', [2.59035, -2.72965, -310.98965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y4', [-1.10958, -2.72958, -312.50958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y5', [1.11049, -2.72951, -312.50951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y6', [0, -2.73, -314.35], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y7', [1.66007, -2.72993, -315.76993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y8', [3.10014, -2.72986, -317.40986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y9', [4.51021, -2.72979, -319.02979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y10', [4.51028, -2.72972, -319.02972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y11', [5.52035, -2.72965, -320.93965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y12', [5.65042, -2.72958, -323.14958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y13', [4.83049, -2.72951, -325.14951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y14', [4.04, -2.73, -327.18], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y15', [2.83007, -2.72993, -328.95993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y16', [1.10014, -2.72986, -330.25986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y17', [-1.65979, -2.72979, -315.76979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y18', [-3.09972, -2.72972, -317.40972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y19', [-4.50965, -2.72965, -319.02965], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y20', [-4.50958, -2.72958, -319.02958], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y21', [-5.51951, -2.72951, -320.93951], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y22', [-5.65, -2.73, -323.15], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y23', [-4.82993, -2.72993, -325.14993], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y24', [-4.03986, -2.72986, -327.17986], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y25', [-2.82979, -2.72979, -328.95979], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('Y26', [-1.09972, -2.72972, -330.25972], [0, 0, 0], [2.12, 2.12, 2.12]);
        a.re('P25', [2.72035, -5.11965, -20.85965], [-0.79, 0, 0], [2, 2, 5.9]);
        a.re('P26', [0.00042, -2.93958, -4.40958], [0, -0.22, 0], [2, 2, 20]);
        a.re('P27', [-2.71951, -5.11951, -20.85951], [0.79, 0, 0], [2, 2, 5.9]);
        a.re('P28', [0, -5.12, -16.72], [0, 0, 0], [2, 2, 5.46]);
        a.re('P29', [0.00007, -3.60993, -20.83993], [-0.79, 0, 0], [2, 2, 2]);
        a.re('P30', [-4.35986, -5.11986, -27.53986], [0, 0, 0], [2.6, 2, 8.3]);
        a.re('P31', [4.36021, -5.11979, -27.53979], [0, 0, 0], [2.6, 2, 8.3]);
        a.re('C0', [-4.07972, -7.35972, -62.12972], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-6.14965, -7.819650000000001, -68.90965], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-2.52958, -8.14958, -71.81958], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-4.07951, -7.35951, -77.26951], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-4.08, -7.36, -83.25], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [-2.62993, -8.02993, -89.69993], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [-6.08986, -8.06986, -95.34986], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [-2.62979, -7.77979, -93.94979], [0, 0, 0], [2, 2, 2]);
        a.re('P32', [-1.14972, -5.00972, -108.99972], [-0.36, 0.44, -0.12], [3, 2, 20]);
        a.re('P33', [1.15035, -5.00965, -108.99965], [0.36, 0.44, 0.12], [3, 2, 20]);
        a.re('P34', [0.00042, -2.66958, -218.89958], [0, 0, 0], [13.86, 2, 50]);
        a.re('P35', [-4.35951, -8.58951, -43.75951], [0, 0, 0], [6, 2, 18.12]);
        a.re('P36', [4.37, -8.59, -43.8], [0, 0, 0], [6, 2, 18.12]);
        a.re('P37', [8.93007, -2.66993, -281.12993], [0, 0, 0], [0.1, 2, 53.96]);
        a.re('P38', [-8.86986, -2.66986, -281.12986], [0, 0, 0], [0.1, 2, 54.54]);
        a.re('Y27', [-4.35979, -11.49979, -76.95979], [0, 1.57, 0], [7.62, 50, 7.62]);
        a.re('P39', [0.00028, -2.66972, -250.10972], [0, 0, 0], [13.86, 2, 14.56]);
        a.re('P40', [2.05035, -3.60965, -22.91965], [-2.36, 0, 0], [4, 2, 2]);
        a.re('P41', [-2.11958, -3.60958, -22.94958], [-0.79, 0, 0], [4, 2, 2]);
        a.re('P42', [0.00049, -2.66951, -280.98951], [0, 0, 0], [18, 2, 54.76]);
        a.re('Y28', [0.00021, -0.68979, -196.57979], [0, 0, 0], [2, 2, 2]);
        a.re('Y29', [0.00028, -0.70972, -199.20972], [0, 0, 0], [2, 2, 2]);
        a.re('Y30', [0.00035, -0.70965, -201.80965], [0, 0, 0], [2, 2, 2]);
        a.re('Y31', [0.00042, -0.70958, -209.68958], [0, 0, 0], [2, 2, 2]);
        a.re('Y32', [-3.68951, -0.70951, -213.97951], [0, 0, 0], [2, 2, 2]);
        a.re('Y33', [3.69, -0.71, -213.98], [0, 0, 0], [2, 2, 2]);
        a.re('Y34', [-5.37993, -0.70993, -216.77993], [0, 0, 0], [2, 2, 2]);
        a.re('Y35', [5.38014, -0.70986, -216.77986], [0, 0, 0], [2, 2, 2]);
        a.re('Y36', [0.00021, -0.70979, -216.77979], [0, 0, 0], [2, 2, 2]);
        a.re('Y37', [-2.63972, -0.70972, -221.32972], [0, 0, 0], [2, 2, 2]);
        a.re('Y38', [1.26035, -0.71965, -225.62965], [0, 0, 0], [2, 2, 2]);
        a.re('Y39', [5.67042, -0.71958, -232.01958], [0, 0, 0], [2, 2, 2]);
        a.re('Y40', [-5.03951, -0.71951, -232.01951], [0, 0, 0], [2, 2, 2]);
        a.re('Y41', [-2.54, -0.72, -238.2], [0, 0, 0], [2, 2, 2]);
        a.re('P43', [0.00007, -8.29993, -182.20993], [0, 0.43, 0], [13.86, 2, 27]);
        a.re('E0', [0.00014, -2.72986, -332.06986], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {
		if (this.player1 !== null) {
			this.collision_check();
		}
    },
    render_update: function() {
		if (this.player1 !== null) {
			this.player_move();
		}
    },
    collision_check: function() {
		if (this.player1.position.y < -20) {change_state.die('Fell To Death')}
		if (this.player1.position.y > 80) {change_state.die('Left The Orbit')}
		this.checkConeCollision()
		this.checkEndingCollision()
	},
	checkConeCollision() {
		for (let i=0;i<maker.cone_count;i++) {
			let cone = cones[i];
			if (this.are_touching(this.player1, cone, 0.5)) {
				change_state.die('Died From Cone');
				break;
			}
		}
	},
	checkEndingCollision() {
		if (score < 10) return
		for (let i=0;i<maker.ending_count;i++) {
			let ending = endings[i];
			if (this.are_touching(this.player1, ending, 1.2)) { // previously 1.0
				change_state.win();
				break;
			}
		}
	},
	player_move: function() {
		if (!this.shouldSpin()) {
			this.player1.physicsImpostor.setAngularVelocity(new BABYLON.Vector3(0,0,0));
			this.player1.rotationQuaternion = BABYLON.Quaternion.RotationAxis(new BABYLON.Vector3(0,0,0),0);
		}

		if (this.player1 !== null) {
			this.player1.rotation.y = -player.rotation.y;
			this.player1.position.x = -player.position.x;
			this.player1.position.z = player.position.z;
		}
		camera.position.x = 0;
        if (!this.new_cam) {
            if (!this.skip_cam) {
                camera.rotation.x = 40*Math.PI/180;
            } else {
                camera.rotation.x = 59*Math.PI/180;
            }
            camera.position.y = player.position.y + cam_vertical + 5;
            camera.rotation.y = 3.14;
        } else {
            cam_depression = 1.57;
            camera.position.y = player.position.y + cam_vertical + 15;
            camera.rotation.y = 3.14;
            camera.position.z = player.position.z - 5;
        }
	},
	shouldSpin: function() {
		if (speed === default_speed) return true;
		if (speed === 0.2) return true;
		return false
	},
	are_touching: function(a, b, r) {
		let dz = a.position.z - b.position.z;
		if (Math.abs(dz) < r) {
			let dx = a.position.x - b.position.x;
			if (Math.abs(dx) < r) {
				let dy = a.position.y - b.position.y;
				if (Math.abs(dy) < r * 1.5) {
					return true;
				}
			}
		}
		return false;
	},
}